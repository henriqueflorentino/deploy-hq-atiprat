name: CI/CD Deploy - Teste

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t henriqueflorentino/deploy-hq-atiprat .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to Docker Hub
        run: |
          docker push henriqueflorentino/deploy-hq-atiprat

      - name: Run deployment and analysis on remote server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          timeout: 30s
          command_timeout: 10m
          script: |
            echo 'üîÑ Limpando containers antigos...'
            docker rm -f sonarqube-temp || true
            docker rm -f scanner-temp || true

            echo 'üîó Criando rede Docker compartilhada...'
            docker network create sonar-net || true

            echo 'üì¶ Baixando imagem do SonarQube...'
            docker pull sonarqube:latest

            echo 'üöÄ Subindo container do SonarQube...'
            docker run -d --name sonarqube-temp --network sonar-net -p 8134:9000 sonarqube:latest

            echo '‚è≥ Aguardando SonarQube ficar pronto...'
            for i in {1..20}; do
              if curl -s http://localhost:9000/api/system/health | grep -q '"status":"UP"'; then
                echo "‚úÖ SonarQube est√° pronto."
                break
              fi
              echo "‚åõ Ainda n√£o est√° pronto... aguardando 10s"
              sleep 10
            done

            echo '‚öôÔ∏è Rodando an√°lise com sonar-scanner via Docker...'
            docker run --rm \
              --name scanner-temp \
              --network sonar-net \
              -v "$(pwd)":/usr/src \
              -w /usr/src \
              sonarsource/sonar-scanner-cli \
              sonar-scanner \
              -Dsonar.projectKey=flask-app \
              -Dsonar.sources=. \
              -Dsonar.host.url=http://sonarqube-temp:9000 \
              -Dsonar.login=admin \
              -Dsonar.password=admin || {
                echo "‚ùå An√°lise SonarQube falhou."
                docker stop sonarqube-temp
                docker rm sonarqube-temp
                exit 1
              }

            echo '‚úÖ An√°lise SonarQube aprovada.'
            docker stop sonarqube-temp
            docker rm sonarqube-temp

            echo 'üßπ Limpando aplica√ß√£o antiga (se houver)...'
            docker rm -f meu-app || true

            echo 'üöÄ Subindo nova vers√£o da aplica√ß√£o...'
            docker run -d --name meu-app -p 8134:5000 henriqueflorentino/deploy-hq-atiprat

            echo '‚úÖ Deploy finalizado com sucesso. Aplica√ß√£o dispon√≠vel em http://201.23.3.86:8134'
            docker ps
