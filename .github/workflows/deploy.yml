name: CI/CD Deploy - Teste

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t henriqueflorentino/deploy-hq-atiprat .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to Docker Hub
        run: |
          docker push henriqueflorentino/deploy-hq-atiprat

      - name: Run SonarQube analysis and deploy remotely
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          timeout: 30s
          command_timeout: 20m
          script: |
            echo 'üîÑ Limpando containers antigos...'
            docker rm -f sonarhenriquef scannerhenriquef app_henrique db_henrique init-db-henrique || true
            docker network create rede-henrique || true
            docker volume create sonar_data || true

            echo 'üì¶ Subindo SonarQube tempor√°rio...'
            docker run -d \
              --name sonarhenriquef \
              --network rede-henrique \
              -p 8136:9000 \
              -v sonar_data:/opt/sonarqube/data \
              -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true \
              -e SONAR_JAVA_OPTS="-Xmx512m -Xms256m" \
              sonarqube:lts-community

            echo '‚è≥ Aguardando SonarQube iniciar...'
            for i in {1..30}; do
              if curl -s http://localhost:8136/api/system/health | grep -q '"status":"UP"'; then
                echo "‚úÖ SonarQube est√° pronto."
                break
              fi
              echo "‚åõ Aguardando... ($i/30)"
              sleep 5
            done

            if ! curl -s http://localhost:8136/api/system/health | grep -q '"status":"UP"'; then
              echo "‚ùå SonarQube n√£o iniciou a tempo. Logs:"
              docker logs sonarhenriquef || true
              docker stop sonarhenriquef
              docker rm sonarhenriquef
              exit 1
            fi

            echo 'üîç Rodando an√°lise com sonar-scanner...'
            docker run --rm \
              --name scannerhenriquef \
              --network rede-henrique \
              -v "$(pwd)":/usr/src \
              -w /usr/src \
              sonarsource/sonar-scanner-cli \
              sonar-scanner \
              -Dsonar.projectKey=flask-henriquef-app \
              -Dsonar.sources=. \
              -Dsonar.host.url=http://sonarhenriquef:9000 \
              -Dsonar.login=admin \
              -Dsonar.password=admin || {
                echo "‚ùå An√°lise falhou. Abortando deploy."
                docker stop sonarhenriquef
                docker rm sonarhenriquef
                exit 1
              }

            echo '‚úÖ An√°lise SonarQube aprovada.'
            docker stop sonarhenriquef
            docker rm sonarhenriquef

            echo 'üê¨ Subindo MySQL...'
            docker run -d --name db_henrique \
              --network rede-henrique \
              -e MYSQL_ROOT_PASSWORD=root \
              -e MYSQL_DATABASE=mydb \
              -e MYSQL_USER=user \
              -e MYSQL_PASSWORD=password \
              -v db_data:/var/lib/mysql \
              -p 8135:3306 \
              --health-cmd="mysqladmin ping -h localhost" \
              --health-interval=5s \
              --health-timeout=10s \
              --health-retries=10 \
              mysql:8.0

            echo '‚è≥ Aguardando banco ficar saud√°vel...'
            for i in {1..30}; do
              STATUS=$(docker inspect --format='{{json .State.Health.Status}}' db_henrique)
              if [ "$STATUS" == "\"healthy\"" ]; then
                echo "‚úÖ MySQL est√° saud√°vel."
                break
              fi
              echo "‚åõ Esperando sa√∫de do banco... ($i/30)"
              sleep 5
            done

            if [ "$STATUS" != "\"healthy\"" ]; then
              echo "‚ùå Banco n√£o saud√°vel. Logs:"
              docker logs db_henrique
              exit 1
            fi

            echo '‚öôÔ∏è Inicializando banco de dados...'
            docker run --rm --name init-db-henrique \
              --network rede-henrique \
              -e MYSQL_HOST=db_henrique \
              -e MYSQL_USER=user \
              -e MYSQL_PASSWORD=password \
              -e MYSQL_DB=mydb \
              henriqueflorentino/deploy-hq-atiprat \
              bash -c "sleep 10 && python init_db.py"

            echo 'üöÄ Subindo aplica√ß√£o Flask...'
            docker run -d --name app_henrique \
              --network rede-henrique \
              -e FLASK_APP=run.py \
              -e FLASK_ENV=production \
              -e FLASK_DEBUG=0 \
              -e MYSQL_HOST=db_henrique \
              -e MYSQL_USER=user \
              -e MYSQL_PASSWORD=password \
              -e MYSQL_DB=mydb \
              -p 8134:5000 \
              henriqueflorentino/deploy-hq-atiprat

            echo '‚úÖ Deploy finalizado! Acesse: http://201.23.3.86:8134'
            docker ps
