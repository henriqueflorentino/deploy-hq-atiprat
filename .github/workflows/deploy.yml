name: CI/CD Deploy - Teste com SonarQube

on:
  push:
    branches:
      - main

jobs:
  sonar_analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run SonarQube on remote server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          timeout: 30s
          command_timeout: 15m
          script: |
            docker rm -f sonarqube_henrique || true
            docker volume rm -f sonarqube_data_henrique || true
            docker run -d --name sonarqube_henrique \
              -p 8138:9000 \
              -v sonarqube_data_henrique:/opt/sonarqube/data \
              sonarqube:lts
            echo "Aguardando o SonarQube iniciar..."
            sleep 90

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: http://201.23.3.86:8138
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=deploy-hq-atiprat
            -Dsonar.sources=.
            -Dsonar.project.name="Deploy HQ Atiprat"

      - name: Check SonarQube Quality Gate
        uses: SonarSource/sonarqube-quality-gate-check-action@v2.1.0
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: http://201.23.3.86:8138

      - name: Stop and Remove SonarQube container
        if: always()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          timeout: 30s
          command_timeout: 5m
          script: |
            docker rm -f sonarqube_henrique || true
            docker volume rm -f sonarqube_data_henrique || true

  deploy:
    runs-on: ubuntu-latest
    needs: sonar_analysis

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t henriqueflorentino/deploy-hq-atiprat .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to Docker Hub
        run: |
          docker push henriqueflorentino/deploy-hq-atiprat

      - name: Run deployment on remote server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          timeout: 30s
          command_timeout: 15m
          script: |
            docker rm -f app_henrique db_henrique init-db-henrique || true
            docker network create rede-henrique || true
            docker pull henriqueflorentino/deploy-hq-atiprat
            docker run -d --name db_henrique \
              --network rede-henrique \
              -e MYSQL_ROOT_PASSWORD=root \
              -e MYSQL_DATABASE=mydb \
              -e MYSQL_USER=user \
              -e MYSQL_PASSWORD=password \
              -v db_data:/var/lib/mysql \
              -p 8135:3306 \
              mysql:8.0
            echo "Aguardando o banco de dados iniciar..."
            sleep 90
            docker run --rm --name init-db-henrique \
              --network rede-henrique \
              -e MYSQL_HOST=db_henrique \
              -e MYSQL_USER=user \
              -e MYSQL_PASSWORD=password \
              -e MYSQL_DB=mydb \
              henriqueflorentino/deploy-hq-atiprat \
              bash -c "sleep 10 && python init_db.py"
            docker run -d --name app_henrique \
              --network rede-henrique \
              -e FLASK_APP=run.py \
              -e FLASK_ENV=production \
              -e FLASK_DEBUG=0 \
              -e MYSQL_HOST=db_henrique \
              -e MYSQL_USER=user \
              -e MYSQL_PASSWORD=password \
              -e MYSQL_DB=mydb \
              -p 8134:5000 \
              henriqueflorentino/deploy-hq-atiprat
            docker ps