name: CI/CD Deploy - Teste

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t henriqueflorentino/deploy-hq-atiprat .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to Docker Hub
        run: |
          docker push henriqueflorentino/deploy-hq-atiprat

      - name: Run deployment and analysis on remote server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          timeout: 30s
          command_timeout: 15m
          script: |
            echo 'üßπ Limpando containers antigos...'
            docker rm -f app_henrique db_henrique init-db-henrique || true
            docker network create rede-henrique || true

            echo 'Atualizando os containers...'
            docker pull henriqueflorentino/deploy-hq-atiprat
            echo 'Containers atualizados'

            echo 'üê¨ Subindo container do MySQL...'
            docker run -d --name db_henrique \
              --network rede-henrique \
              -e MYSQL_ROOT_PASSWORD=root \
              -e MYSQL_DATABASE=mydb \
              -e MYSQL_USER=user \
              -e MYSQL_PASSWORD=password \
              -v db_data:/var/lib/mysql \
              -p 8135:3306 \
              --health-cmd="mysqladmin ping -h localhost" \
              --health-interval=5s \
              --health-timeout=10s \
              --health-retries=10 \
              mysql:8.0

            echo '‚è≥ Aguardando MySQL ficar saud√°vel...'
            for i in {1..30}; do
              STATUS=$(docker inspect --format='{{json .State.Health.Status}}' db_henrique)
              if [ "$STATUS" == "\"healthy\"" ]; then
                echo "‚úÖ MySQL est√° saud√°vel."
                break
              fi
              echo "‚åõ Aguardando sa√∫de do banco... ($i/30)"
              sleep 5
            done

            if [ "$STATUS" != "\"healthy\"" ]; then
              echo "‚ùå MySQL n√£o ficou saud√°vel a tempo. Logs:"
              docker logs db_henrique
              exit 1
            fi

            echo '‚öôÔ∏è Inicializando banco de dados...'
            docker run --rm --name init-db-henrique \
              --network rede-henrique \
              -e MYSQL_HOST=db_henrique \
              -e MYSQL_USER=user \
              -e MYSQL_PASSWORD=password \
              -e MYSQL_DB=mydb \
              henriqueflorentino/deploy-hq-atiprat \
              bash -c "sleep 10 && python init_db.py"

            echo 'üöÄ Subindo aplica√ß√£o Flask...'
            docker run -d --name app_henrique \
              --network rede-henrique \
              -e FLASK_APP=run.py \
              -e FLASK_ENV=production \
              -e FLASK_DEBUG=0 \
              -e MYSQL_HOST=db_henrique \
              -e MYSQL_USER=user \
              -e MYSQL_PASSWORD=password \
              -e MYSQL_DB=mydb \
              -p 8134:5000 \
              henriqueflorentino/deploy-hq-atiprat

            echo '‚úÖ Deploy finalizado! Acesse em http://201.23.3.86:8134'
            docker ps