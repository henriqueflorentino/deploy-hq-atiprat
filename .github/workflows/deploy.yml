name: CI/CD Deploy - Teste com SonarQube

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build da imagem Docker
        run: docker build -t henriqueflorentino/deploy-hq-atiprat .

      - name: Push da imagem para o Docker Hub
        run: docker push henriqueflorentino/deploy-hq-atiprat:latest

  sonar_analysis:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Iniciar contêiner do SonarQube no servidor remoto
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            docker rm -f sonarqube_henrique || true
            docker volume rm -f sonarqube_data_henrique || true
            docker run -d --name sonarqube_henrique \
              -p 8138:9000 \
              -v sonarqube_data_henrique:/opt/sonarqube/data \
              sonarqube:lts
            sleep 90

      - name: SonarQube Scan e Verificação do Quality Gate
        uses: SonarSource/sonarqube-scan-action@v2
        with:
          args: >
            -Dsonar.host.url=http://201.23.3.86:8138
            -Dsonar.projectKey=deploy-hq-atiprat
            -Dsonar.sources=.
            -Dsonar.project.name=Deploy-HQ-Atiprat
            -Dsonar.qualitygate.wait=true
            -Dsonar.qualitygate.timeout=300
            -Dsonar.login=admin
            -Dsonar.password=admin

      - name: Parar e remover o contêiner do SonarQube
        if: always()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            docker rm -f sonarqube_henrique || true
            docker volume rm -f sonarqube_data_henrique || true

  deploy:
    runs-on: ubuntu-latest
    needs: sonar_analysis
    steps:
      - name: Deploy da aplicação no servidor remoto
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            docker rm -f app_henrique db_henrique init-db-henrique || true
            docker network create rede-henrique || true
            docker pull henriqueflorentino/deploy-hq-atiprat:latest
            docker run -d --name db_henrique \
              --network rede-henrique \
              -e MYSQL_ROOT_PASSWORD=root \
              -e MYSQL_DATABASE=mydb \
              -e MYSQL_USER=user \
              -e MYSQL_PASSWORD=password \
              -v db_data:/var/lib/mysql \
              -p 8135:3306 \
              mysql:8.0
            sleep 90
            docker run --rm --name init-db-henrique \
              --network rede-henrique \
              -e MYSQL_HOST=db_henrique \
              henriqueflorentino/deploy-hq-atiprat:latest \
              bash -c "sleep 10 && python init_db.py"
            docker run -d --name app_henrique \
              --network rede-henrique \
              -p 8134:5000 \
              -e MYSQL_HOST=db_henrique \
              henriqueflorentino/deploy-hq-atiprat:latest
            docker ps
